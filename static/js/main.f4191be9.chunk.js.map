{"version":3,"sources":["components/header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helper.js","components/Popup.js","components/Notification.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","corrent","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","Notification","words","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","random","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4191be9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n         <h1>Hangman</h1>\r\n         <p>Find the hidden word - Enter a letter</p>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Figure = ({wrongLetters}) => {\r\n    const errors = wrongLetters.length;\r\n    return (\r\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n        {/*<!-- Rod -->*/}\r\n        <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n        <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n        <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n        <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n        {/*<!-- Head -->*/}\r\n        {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\"/>}\r\n        {/*<!-- Body -->*/}\r\n        {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\"/>}\r\n        {/*<!-- Arms -->*/}\r\n        {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\"/>}\r\n        {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\"/>}\r\n        {/*<!-- Legs -->*/}\r\n        {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\"/>}\r\n        {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\"/>}\r\n      </svg>\r\n    )\r\n}\r\n\r\nexport default Figure\r\n","import React from 'react'\r\n\r\nconst WrongLetters = ({wrongLetters}) => {\r\n    return (\r\n        <div className=\"wrong-letters-container\">\r\n            <div>\r\n                {wrongLetters.length > 0 && <p>Wrong</p>}\r\n                {wrongLetters\r\n                            .map((letter, i) => <span key={i}>{letter}</span>)\r\n                            .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React from 'react'\r\n\r\nfunction Word({ selectedWord, correctLetters }) {\r\n    return (\r\n        <div className=\"word\">\r\n            {selectedWord.split('').map( (letter, i) => {\r\n                 return(\r\n                    <span className=\"letter\" key={i}>\r\n                        {correctLetters.includes(letter) ? letter : ''}\r\n                    </span>\r\n                    )\r\n                 })}\r\n        </div>\r\n    )\r\n                }\r\n\r\nexport default Word\r\n","export function showNotification(setter) {\r\n    setter(true)\r\n    setTimeout(() => {\r\n        setter(false);\r\n    }, 2000)\r\n}\r\n\r\nexport function checkWin(corrent, wrong, word) {\r\n    let status = 'win';\r\n    // check for win\r\n    word.split('').forEach(letter => {\r\n        if(!corrent.includes(letter)){\r\n            status = '';\r\n        }\r\n    });\r\n\r\n    // check if lose\r\n    if(wrong.length === 6) status = 'lose';\r\n\r\n    return status;\r\n}","import React, { useEffect } from 'react'\r\nimport { checkWin } from '../helpers/helper';\r\n\r\nconst Popup = ({ correctLetters, wrongLetters, selectedWord, setPlayable, playAgain }) => {\r\n    let finalMessage = '';\r\n    let finalMessageRevealWord = '';\r\n    let playable = true;\r\n\r\n    if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\r\n        finalMessage = 'Congratulations! You won! ðŸ˜ƒ';\r\n        playable = false\r\n    } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose') {\r\n        finalMessage = 'Unfortunately you lost. ðŸ˜•';\r\n        finalMessageRevealWord =  `...the word was: ${selectedWord}`;\r\n        playable = false\r\n    }\r\n\r\n    useEffect(() => setPlayable(playable));\r\n\r\n    return (\r\n        <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {}}>\r\n            <div className=\"popup\">\r\n                <h2>{finalMessage}</h2>\r\n                <h3>{finalMessageRevealWord}</h3>\r\n                <button onClick={playAgain}>Play Again</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n","import React from 'react'\r\n\r\nconst Notification = ({ showNotification }) => {\r\n    return (\r\n        <div className={`notification-container ${showNotification ? 'show' : ''}`} >\r\n            <p>You have already entered this letter</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import './App.css';\nimport { useState, useEffect } from 'react'\nimport Header from './components/header'\nimport Figure from './components/Figure'\nimport WrongLetters from './components/WrongLetters'\nimport Word from './components/Word'\nimport Popup from './components/Popup'\nimport Notification from './components/Notification'\nimport {showNotification as show} from './helpers/helper'\n\nconst words = ['application', 'programming', 'interface', 'wizard', 'information', 'learn', 'work', 'money'];\n\nlet selectedWord = '';\n\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  \n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode } = event;\n        if (playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n    \n          if (selectedWord.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n              setCorrectLetters(currentLetters => [...currentLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          }\n        }\n    }\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  \n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n    \n  }\n\n \n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\n      <Notification showNotification={showNotification} />\n    </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}